{"version":3,"sources":["components/BodyComponents/StockTable/StockTableRow/DeleteButton.js","components/BodyComponents/StockTable/StockTableRow/StockTableRow.js","components/BodyComponents/StockTable/StockTable.js","components/BodyComponents/AddStock.js","components/BodyComponents/AverageTable.js","components/Navbar/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["DeleteButton","show","stock","onDelete","style","color","cursor","onClick","StockTableRow","averageData","billion","average","useState","setShow","className","onMouseEnter","onMouseLeave","ticker","companyName","sector","currentPrice","marketCap","toFixed","enterpriseValue","forwardPE","enterpriseToRev","enterpriseToEbitda","profitMargins","roe","StockTable","stocks","position","left","width","map","AddStock","onAdd","setTicker","onSubmit","e","preventDefault","length","alert","toUpperCase","height","padding","display","fontSize","type","placeholder","value","onChange","target","AverageTable","margin","Navbar","backgroundColor","lineHeight","paddingLeft","App","stocksData","setStocksData","setAverageData","NULL_FIELD_MAGIC_NUMBER","updateAverageData","numPE","numEV","numEtR","numEtE","numMC","numPM","numROE","totalPE","totalEV","totalEtR","totalEtE","totalMC","totalPM","totalROE","i","useEffect","axios","get","then","res","data","catch","error","console","obj","list","containsObject","post","response","log","delete","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b924dadd.chunk.js","sourcesContent":["import {FaTimes} from \"react-icons/all\";\nimport React, {useState} from \"react\";\n\nconst DeleteButton =({ show, stock, onDelete })=>{\n\n    return (\n        <>\n            {\n                 (show) ? <FaTimes style={{ color:'red', cursor: 'pointer' }} onClick={ () => onDelete(stock) }/> : <></>\n            }\n        </>\n\n\n\n    )}\nexport default DeleteButton","import React, {useState} from \"react\";\nimport DeleteButton from \"./DeleteButton\";\n\nconst StockTableRow = ({ stock, averageData, onDelete }) => {\n    const billion = 1000000000\n    const average = averageData[0]\n\n    const [show, setShow] = useState(false)\n    return(\n         <tr key={ stock.ticker }>\n             <td className='delete' onMouseEnter={()=> setShow(true)} onMouseLeave={()=> setShow(false)}> <DeleteButton  show={show} stock={ stock } onDelete={ onDelete } /> </td>\n             <td>{ stock.ticker }</td>\n             <td>{ stock.companyName }</td>\n             <td>{ stock.sector }</td>\n             <td>{ stock.currentPrice }</td>\n             <td className={(stock.marketCap>=average.marketCap) ? 'above-average':'below-average'}>{ (stock.marketCap /billion).toFixed(2) }</td>\n             <td className={(stock.enterpriseValue>=average.enterpriseValue) ? 'above-average':'below-average'}>{ (stock.enterpriseValue /billion).toFixed(2) }</td>\n             <td className={(stock.forwardPE<=average.forwardPE) ? 'above-average':'below-average'}>{ (stock.forwardPE).toFixed(2) }</td>\n             <td className={(stock.enterpriseToRev>=average.enterpriseToRev) ? 'above-average':'below-average'}>{ (stock.enterpriseToRev).toFixed(2) }</td>\n             <td className={(stock.enterpriseToEbitda>=average.enterpriseToEbitda) ? 'above-average':'below-average'}>{ (stock.enterpriseToEbitda).toFixed(2) }</td>\n             <td className={(stock.profitMargins>=average.profitMargins) ? 'above-average':'below-average'}>{ (stock.profitMargins).toFixed(3) }</td>\n             <td className={(stock.roe>=average.roe) ? 'above-average':'below-average'}>{ (stock.roe).toFixed(2) }</td>\n         </tr>\n    )\n\n}\nexport default StockTableRow","import React, {useState, useEffect} from 'react'\nimport StockTableRow from \"./StockTableRow/StockTableRow\";\nimport './StockTable.css'\n\nconst StockTable=({ stocks, averageData, onDelete })=> {\n\n    return(\n        <table style={{position:'sticky', left:'1%', width:'95%' }}>\n            <thead key='tableHeader'>\n                <tr key='headerRow'>\n                    <th className='delete'></th>\n                    <th>Ticker</th>\n                    <th>Company</th>\n                    <th>Sector</th>\n                    <th>Current Price</th>\n                    <th>Market Cap</th>\n                    <th>Enterprise Value</th>\n                    <th>Forward PE</th>\n                    <th>Enterprise to Revenue</th>\n                    <th>Enterprise to EBITDA</th>\n                    <th>Profit Margins</th>\n                    <th>ROE</th>\n                </tr>\n            </thead>\n            <tbody key='stocksData'>\n                {\n                    stocks.map((stock) => (\n                      <StockTableRow stock={ stock } averageData={ averageData } onDelete={ onDelete } />\n                    ))\n                }\n            </tbody>\n\n        </table>\n    );\n}\n\nexport default StockTable","import { useState } from 'react'\nconst AddStock =({ onAdd })=> {\n    const [ticker, setTicker] = useState('')\n    const onSubmit = (e) =>{\n        e.preventDefault()\n        if (!ticker){\n            alert('Please use text')\n            return\n        }\n        if(ticker.length>4){\n            alert('Ticker must be less than 4 characters')\n        }\n        onAdd (ticker.toUpperCase())\n        setTicker('')\n    }\n    return(\n        <form onSubmit={ onSubmit } style={{ height:'auto', padding:'30px', display:'flex' }}>\n            <div>\n                <label></label>\n                <input style={{ fontSize:'large'}} type='text' placeholder='Add Ticker'\n                       value={ ticker }\n                       onChange={( e) => setTicker(e.target.value) }/>\n            </div>\n            <div>\n                <input style={{ fontSize:'large'}} type='submit' value='Add'/>\n            </div>\n        </form>\n    );\n}\n\nexport default AddStock","import {useState} from \"react\";\n\nconst AverageTable =({ averageData })=>{\n    const billion = 1000000000\n\n    return(\n        <table style={{margin:'auto'}}>\n            <thead>\n                <tr key='averageHeader'>\n                    <th>Market Cap</th>\n                    <th>Enterprise Value</th>\n                    <th>Forward PE</th>\n                    <th>Enterprise to Revenue</th>\n                    <th>Enterprise to EBITDA</th>\n                    <th>Profit Margins</th>\n                    <th>ROE</th>\n                </tr>\n            </thead>\n            <tbody>\n            {\n                averageData.map((averageData)=>(\n                    <tr key='averageData'>\n                           <td>{ (averageData.marketCap /billion).toFixed(2)}</td>\n                           <td>{ (averageData.enterpriseValue/billion).toFixed(2) }</td>\n                           <td>{ averageData.forwardPE.toFixed(2) }</td>\n                           <td>{ averageData.enterpriseToRev.toFixed(2) }</td>\n                           <td>{ averageData.enterpriseToEbitda.toFixed(2) }</td>\n                           <td>{ averageData.profitMargins.toFixed(2) }</td>\n                           <td>{ averageData.roe.toFixed(2) }</td>\n                    </tr>\n                ))\n            }\n            </tbody>\n        </table>\n    );\n}\n\nexport default AverageTable","import './Navbar.css'\nconst Navbar =()=>{\n    return(\n        <div style={{ width:'100%', height: '70px', backgroundColor:'rgba(147, 112, 219, 0.5)'}}>\n            <h1 style={{ margin: 'auto', lineHeight:'70px', paddingLeft:'15px'}}>BSIF Relative Valuation Tool</h1>\n        </div>\n    )\n}\nexport default Navbar","import StockTable from \"./components/BodyComponents/StockTable/StockTable\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport AddStock from \"./components/BodyComponents/AddStock\";\nimport AverageTable from \"./components/BodyComponents/AverageTable\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport './components/BodyComponents/BodyComponents.css'\n\nconst App =()=> {\n    const [stocksData, setStocksData] = useState([])\n    const [averageData, setAverageData] = useState([])\n    const NULL_FIELD_MAGIC_NUMBER = -420.69\n\n    function containsObject(obj, list) {\n        for (var i = 0; i < list.length; i++) {\n            if (list[i].ticker === obj) {\n                return true;\n            }\n        }\n        return false\n    }\n\n    const updateAverageData =(stocks) => {\n        if(stocks.length>0){\n            let numPE=0, numEV=0, numEtR=0, numEtE=0, numMC=0, numPM=0, numROE=0\n            let totalPE=0, totalEV=0, totalEtR=0, totalEtE=0, totalMC=0, totalPM=0, totalROE=0\n\n            for(let i =0; i<stocks.length; i++){\n                const stock = stocks[i]\n                if(stock.forwardPE !== NULL_FIELD_MAGIC_NUMBER) {\n                    totalPE += stock.forwardPE\n                    numPE += 1\n                }\n                if(stock.enterpriseValue !== NULL_FIELD_MAGIC_NUMBER) {\n                    totalEV += stock.enterpriseValue\n                    numEV += 1\n                }\n                if(stock.enterpriseToRev !== NULL_FIELD_MAGIC_NUMBER) {\n                    totalEtR += stock.enterpriseToRev\n                    numEtR += 1\n                }\n                if(stock.enterpriseToEbitda !== NULL_FIELD_MAGIC_NUMBER) {\n                    totalEtE += stock.enterpriseToEbitda\n                    numEtE += 1\n                }\n                if(stock.marketCap !== NULL_FIELD_MAGIC_NUMBER) {\n                    totalMC += stock.marketCap\n                    numMC += 1\n                }\n                if(stock.profitMargins !== NULL_FIELD_MAGIC_NUMBER) {\n                    totalPM += stock.profitMargins\n                    numPM += 1\n                }\n                if(stock.roe !== NULL_FIELD_MAGIC_NUMBER) {\n                    totalROE += stock.roe\n                    numROE += 1\n                }\n            }\n            setAverageData([{forwardPE:(totalPE/numPE),\n            enterpriseValue:(totalEV/numEV),\n            enterpriseToRev:(totalEtR/numEtR),\n            enterpriseToEbitda:(totalEtE/numEtE),\n            marketCap:(totalMC/numMC),\n            profitMargins:(totalPM/numPM),\n            roe:(totalROE/numROE)}])\n        }else{setAverageData([])}\n\n    }\n\n    useEffect(()=> {\n         axios.get(\"stocks/\")\n          .then(res => {\n              updateAverageData(res.data.stocksData)\n              setStocksData(res.data.stocksData)\n\n          }).catch(error => console.error('Error: $(error)'))\n    }, [])\n\n    const onAdd =(ticker)=>{\n        if(!containsObject(ticker, stocksData)){\n            axios.post(\"stocks/\", {ticker:ticker})\n                .then(res => {\n                updateAverageData([...stocksData, res.data])\n                setStocksData([...stocksData, res.data])\n                }).catch(function (error) {\n                if (error.response) {\n                    console.log(error.response)\n                }\n                })\n        }else {alert(\"Stock already in list!\")}\n\n    }\n\n    const onDelete = ({ ticker }) =>{\n        axios.delete(\"stocks/delete-stock/\" + ticker)\n        setStocksData(stocksData.filter((stock) => stock.ticker !== ticker))\n        updateAverageData(stocksData.filter((stock) => stock.ticker !== ticker))\n    }\n\n    return (\n    <div className=\"App\">\n        <Navbar/>\n        <AddStock onAdd={ onAdd }/>\n        {\n            (stocksData.length>0) ? <StockTable stocks={ stocksData } averageData={averageData} onDelete={ onDelete } />\n                : <div>Add a stock stupid</div>\n        }\n        <div style={{height:'30px'}}/>\n        {\n            (averageData.length>0) ? <AverageTable averageData={averageData}/>\n                : <></>\n        }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}