{"ast":null,"code":"var _jsxFileName = \"/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/components/StockTable/StockTableRow/StockTableRow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport DeleteButton from \"./DeleteButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StockTableRow = ({\n  stock,\n  averageData,\n  onDelete\n}) => {\n  _s();\n\n  const billion = 1000000000;\n  const average = averageData[0];\n  const [show, setShow] = useState(false);\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"delete\",\n      onMouseEnter: () => setShow(true),\n      onMouseLeave: () => setShow(false),\n      children: [\" \", /*#__PURE__*/_jsxDEV(DeleteButton, {\n        show: show,\n        stock: stock,\n        onDelete: onDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 107\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.ticker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.companyName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.sector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.currentPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: stock.marketCap > average.marketCap ? 'above-average' : 'below-average',\n      children: (stock.marketCap / billion).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: stock.enterpriseValue > average.enterpriseValue ? 'above-average' : 'below-average',\n      children: (stock.enterpriseValue / billion).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: stock.forwardPE < average.forwardPE ? 'above-average' : 'below-average',\n      children: stock.forwardPE.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: stock.enterpriseToRev > average.enterpriseToRev ? 'above-average' : 'below-average',\n      children: stock.enterpriseToRev.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: stock.enterpriseToEbitda > average.enterpriseToEbitda ? 'above-average' : 'below-average',\n      children: stock.enterpriseToEbitda.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: stock.profitMargins > average.profitMargins ? 'above-average' : 'below-average',\n      children: stock.profitMargins.toFixed(3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: stock.roe > average.roe ? 'above-average' : 'below-average',\n      children: stock.roe.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this)]\n  }, stock.ticker, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StockTableRow, \"NKb1ZOdhT+qUsWLXSgjSS2bk2C4=\");\n\n_c = StockTableRow;\nexport default StockTableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockTableRow\");","map":{"version":3,"sources":["/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/components/StockTable/StockTableRow/StockTableRow.js"],"names":["React","useState","DeleteButton","StockTableRow","stock","averageData","onDelete","billion","average","show","setShow","ticker","companyName","sector","currentPrice","marketCap","toFixed","enterpriseValue","forwardPE","enterpriseToRev","enterpriseToEbitda","profitMargins","roe"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport DeleteButton from \"./DeleteButton\";\n\nconst StockTableRow = ({ stock, averageData, onDelete }) => {\n    const billion = 1000000000\n    const average = averageData[0]\n\n    const [show, setShow] = useState(false)\n    return(\n         <tr key={ stock.ticker }>\n             <td className='delete' onMouseEnter={()=> setShow(true)} onMouseLeave={()=> setShow(false)}> <DeleteButton  show={show} stock={ stock } onDelete={ onDelete } /> </td>\n             <td>{ stock.ticker }</td>\n             <td>{ stock.companyName }</td>\n             <td>{ stock.sector }</td>\n             <td>{ stock.currentPrice }</td>\n             <td className={(stock.marketCap>average.marketCap) ? 'above-average':'below-average'}>{ (stock.marketCap /billion).toFixed(2) }</td>\n             <td className={(stock.enterpriseValue>average.enterpriseValue) ? 'above-average':'below-average'}>{ (stock.enterpriseValue /billion).toFixed(2) }</td>\n             <td className={(stock.forwardPE<average.forwardPE) ? 'above-average':'below-average'}>{ (stock.forwardPE).toFixed(2) }</td>\n             <td className={(stock.enterpriseToRev>average.enterpriseToRev) ? 'above-average':'below-average'}>{ (stock.enterpriseToRev).toFixed(2) }</td>\n             <td className={(stock.enterpriseToEbitda>average.enterpriseToEbitda) ? 'above-average':'below-average'}>{ (stock.enterpriseToEbitda).toFixed(2) }</td>\n             <td className={(stock.profitMargins>average.profitMargins) ? 'above-average':'below-average'}>{ (stock.profitMargins).toFixed(3) }</td>\n             <td className={(stock.roe>average.roe) ? 'above-average':'below-average'}>{ (stock.roe).toFixed(2) }</td>\n         </tr>\n    )\n\n}\nexport default StockTableRow"]},"metadata":{},"sourceType":"module"}