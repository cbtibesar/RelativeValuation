{"ast":null,"code":"var _jsxFileName = \"/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport StockTable from \"./components/StockTable\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AddStock from \"./components/AddStock\";\nimport AverageTable from \"./components/AverageTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stocksData, setStocksData] = useState([]);\n  const [averageData, setAverageData] = useState({});\n\n  const updateAverageData = stocks => {\n    let numStocks = 0;\n    let averagePE = 0;\n    let averageEnterpriseValue = 0;\n    let averageMarketCap = 0;\n    let averageRoe = 0;\n    let averageEnterpriseToRev = 0;\n    let averageEnterpriseToEbitda = 0;\n    let averageProfitMargins = 0;\n    stocks.map(stock => {\n      averagePE += stock.forwardPE;\n      averageEnterpriseToEbitda += stock.enterpriseToEbitda;\n      averageEnterpriseToRev += stock.enterpriseToRev;\n      averageMarketCap += stock.marketCap;\n      averageRoe += stock.roe;\n      averageEnterpriseValue += stock.enterpriseValue;\n      averageProfitMargins += stock.profitMargins;\n      numStocks += 1;\n    });\n    setAverageData({\n      forwardPE: averagePE / numStocks,\n      enterpriseValue: averageEnterpriseValue / numStocks,\n      enterpriseToRev: averageEnterpriseToRev / numStocks,\n      enterpriseToEbitda: averageEnterpriseToEbitda / numStocks,\n      marketCap: averageMarketCap / numStocks,\n      profitMargins: averageProfitMargins / numStocks,\n      roe: averageRoe / numStocks\n    });\n  };\n\n  useEffect(() => {\n    axios.get(\"stocks/\").then(res => {\n      setStocksData(res.data.stocksData);\n      updateAverageData(res.data.stocksData);\n    }).catch(error => console.error('Error: $(error)'));\n  }, []);\n\n  const onAdd = ({\n    ticker\n  }) => {\n    axios.post(\"stocks/\", {\n      ticker: ticker\n    }).then(res => {\n      setStocksData([...stocksData, res.data]);\n      updateAverageData([...stocksData, res.data]);\n    }).catch(error => console.error('Error: $(error)'));\n  };\n\n  const onDelete = ({\n    ticker\n  }) => {\n    axios.delete(\"delete-stock/\" + ticker);\n    setStocksData(stocksData.filter(stock => stock.ticker !== ticker));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AddStock, {\n      onAdd: onAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), stocksData.length > 0 ? /*#__PURE__*/_jsxDEV(StockTable, {\n      data: stocksData,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add a stock stupid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 19\n    }, this), averageData.isEmpty() ? console.log(averageData) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"2/dyr+Xg3NFXVMoIxToV1EY3cso=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/App.js"],"names":["StockTable","useEffect","useState","axios","AddStock","AverageTable","App","stocksData","setStocksData","averageData","setAverageData","updateAverageData","stocks","numStocks","averagePE","averageEnterpriseValue","averageMarketCap","averageRoe","averageEnterpriseToRev","averageEnterpriseToEbitda","averageProfitMargins","map","stock","forwardPE","enterpriseToEbitda","enterpriseToRev","marketCap","roe","enterpriseValue","profitMargins","get","then","res","data","catch","error","console","onAdd","ticker","post","onDelete","delete","filter","length","isEmpty","log"],"mappings":"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","sourcesContent":["import StockTable from \"./components/StockTable\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport AddStock from \"./components/AddStock\";\nimport AverageTable from \"./components/AverageTable\";\n\n\nconst App =()=> {\n    const [stocksData, setStocksData] = useState([])\n    const [averageData, setAverageData] = useState({})\n\n    const updateAverageData =(stocks) => {\n        let numStocks = 0\n        let averagePE = 0;\n        let averageEnterpriseValue = 0;\n        let averageMarketCap = 0;\n        let averageRoe = 0;\n        let averageEnterpriseToRev = 0;\n        let averageEnterpriseToEbitda = 0;\n        let averageProfitMargins = 0;\n        stocks.map((stock) => {\n            averagePE += stock.forwardPE\n            averageEnterpriseToEbitda += stock.enterpriseToEbitda\n            averageEnterpriseToRev += stock.enterpriseToRev\n            averageMarketCap += stock.marketCap\n            averageRoe += stock.roe\n            averageEnterpriseValue += stock.enterpriseValue\n            averageProfitMargins += stock.profitMargins\n            numStocks +=1\n        })\n\n        setAverageData({forwardPE:(averagePE/numStocks),\n        enterpriseValue:(averageEnterpriseValue/numStocks),\n        enterpriseToRev:(averageEnterpriseToRev/numStocks),\n        enterpriseToEbitda:(averageEnterpriseToEbitda/numStocks),\n        marketCap:(averageMarketCap/numStocks),\n        profitMargins:(averageProfitMargins/numStocks),\n        roe:(averageRoe/numStocks)})\n    }\n\n\n    useEffect(()=> {\n         axios.get(\"stocks/\")\n          .then(res => {\n              setStocksData(res.data.stocksData)\n              updateAverageData(res.data.stocksData)\n          }).catch(error => console.error('Error: $(error)'))\n    }, [])\n\n\n    const onAdd =({ ticker })=>{\n        axios.post(\"stocks/\", {ticker:ticker})\n            .then(res => {\n                setStocksData([...stocksData, res.data])\n                updateAverageData([...stocksData, res.data])\n            }).catch(error => console.error('Error: $(error)'))\n\n    }\n\n    const onDelete = ({ ticker }) =>{\n        axios.delete(\"delete-stock/\" + ticker)\n        setStocksData(stocksData.filter((stock) => stock.ticker !== ticker))\n    }\n\n\n    return (\n    <div className=\"App\">\n\n        <AddStock onAdd={ onAdd }/>\n        {\n            (stocksData.length>0) ? <StockTable data={ stocksData } onDelete={ onDelete } />\n                : <div>Add a stock stupid</div>\n        }\n        {\n            (averageData.isEmpty()) ? console.log(averageData)\n                : <div>Hello</div>\n        }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}