{"ast":null,"code":"var _jsxFileName = \"/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/components/StockTable/StockTableRow/StockTableRow.js\";\nimport React from \"react\";\nimport { FaTimes } from \"react-icons/all\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StockTableRow = ({\n  stock,\n  average,\n  onDelete\n}) => {\n  const billion = 1000000000;\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"delete\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(FaTimes, {\n        style: {\n          color: 'red',\n          cursor: 'pointer'\n        },\n        onClick: () => onDelete(stock)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 38\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.ticker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.companyName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.sector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.currentPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: stock.marketCap > average.marketCap ? 'above-average' : 'below-average',\n      children: (stock.marketCap / billion).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: (stock.enterpriseValue / billion).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.forwardPE.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.enterpriseToRev.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.enterpriseToEbitda.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.profitMargins.toFixed(3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.roe.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 14\n    }, this)]\n  }, stock.ticker, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n};\n\n_c = StockTableRow;\nexport default StockTableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockTableRow\");","map":{"version":3,"sources":["/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/components/StockTable/StockTableRow/StockTableRow.js"],"names":["React","FaTimes","classNames","StockTableRow","stock","average","onDelete","billion","color","cursor","ticker","companyName","sector","currentPrice","marketCap","toFixed","enterpriseValue","forwardPE","enterpriseToRev","enterpriseToEbitda","profitMargins","roe"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;;AACA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA;AAAlB,CAAD,KAAkC;AACpD,QAAMC,OAAO,GAAG,UAAhB;AAEA,sBACK;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,QAAd;AAAA,mCAAwB,QAAC,OAAD;AAAS,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAC,KAAR;AAAeC,UAAAA,MAAM,EAAE;AAAvB,SAAhB;AAAoD,QAAA,OAAO,EAAG,MAAMH,QAAQ,CAACF,KAAD;AAA5E;AAAA;AAAA;AAAA;AAAA,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBAAMA,KAAK,CAACM;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA,gBAAMN,KAAK,CAACO;AAAZ;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAA,gBAAMP,KAAK,CAACQ;AAAZ;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,gBAAMR,KAAK,CAACS;AAAZ;AAAA;AAAA;AAAA;AAAA,YALJ,eAMI;AAAI,MAAA,SAAS,EAAIT,KAAK,CAACU,SAAN,GAAgBT,OAAO,CAACS,SAAzB,GAAsC,eAAtC,GAAuD,eAAvE;AAAA,gBAA2F,CAACV,KAAK,CAACU,SAAN,GAAiBP,OAAlB,EAA2BQ,OAA3B,CAAmC,CAAnC;AAA3F;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI;AAAA,gBAAM,CAACX,KAAK,CAACY,eAAN,GAAuBT,OAAxB,EAAiCQ,OAAjC,CAAyC,CAAzC;AAAN;AAAA;AAAA;AAAA;AAAA,YAPJ,eAQI;AAAA,gBAAOX,KAAK,CAACa,SAAP,CAAkBF,OAAlB,CAA0B,CAA1B;AAAN;AAAA;AAAA;AAAA;AAAA,YARJ,eASI;AAAA,gBAAOX,KAAK,CAACc,eAAP,CAAwBH,OAAxB,CAAgC,CAAhC;AAAN;AAAA;AAAA;AAAA;AAAA,YATJ,eAUI;AAAA,gBAAOX,KAAK,CAACe,kBAAP,CAA2BJ,OAA3B,CAAmC,CAAnC;AAAN;AAAA;AAAA;AAAA;AAAA,YAVJ,eAWI;AAAA,gBAAOX,KAAK,CAACgB,aAAP,CAAsBL,OAAtB,CAA8B,CAA9B;AAAN;AAAA;AAAA;AAAA;AAAA,YAXJ,eAYI;AAAA,gBAAOX,KAAK,CAACiB,GAAP,CAAYN,OAAZ,CAAoB,CAApB;AAAN;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA,KAAUX,KAAK,CAACM,MAAhB;AAAA;AAAA;AAAA;AAAA,UADL;AAiBH,CApBD;;KAAMP,a;AAqBN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport { FaTimes } from \"react-icons/all\";\nimport classNames from \"classnames\";\nconst StockTableRow = ({ stock, average, onDelete }) => {\n    const billion = 1000000000\n\n    return(\n         <tr key={ stock.ticker }>\n             <td className='delete'> <FaTimes style={{ color:'red', cursor: 'pointer' }} onClick={ () => onDelete(stock) }/> </td>\n             <td>{ stock.ticker }</td>\n             <td>{ stock.companyName }</td>\n             <td>{ stock.sector }</td>\n             <td>{ stock.currentPrice }</td>\n             <td className={ (stock.marketCap>average.marketCap) ? 'above-average': 'below-average' }>{ (stock.marketCap /billion).toFixed(2) }</td>\n             <td>{ (stock.enterpriseValue /billion).toFixed(2) }</td>\n             <td>{ (stock.forwardPE).toFixed(2) }</td>\n             <td>{ (stock.enterpriseToRev).toFixed(2) }</td>\n             <td>{ (stock.enterpriseToEbitda).toFixed(2) }</td>\n             <td>{ (stock.profitMargins).toFixed(3) }</td>\n             <td>{ (stock.roe).toFixed(2) }</td>\n         </tr>\n    )\n\n}\nexport default StockTableRow"]},"metadata":{},"sourceType":"module"}