{"ast":null,"code":"var _jsxFileName = \"/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport StockTable from \"./components/StockTable\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AddStock from \"./components/AddStock\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stocksData, setStocksData] = useState([]);\n  const [averageData, setAverageData] = useState([]);\n\n  const updateAverageState = ({\n    stocks\n  }) => {\n    const numStocks = stocks.length;\n    var averagePE = 0;\n    var averageEnterpriseValue = 0;\n    var averageMarketCap = 0;\n    var averageRoe = 0;\n    var averageEnterpriseToRev = 0;\n    var averageEnterpriseToEbitda = 0;\n    var averageProfitMargins = 0;\n    stocks.forEach(stock => {\n      averagePE += stock.forwardPE;\n      averageEnterpriseToEbitda += stock.enterpriseToEbitda;\n      averageEnterpriseToRev += stock.enterpriseToRev;\n      averageMarketCap += stock.marketCap;\n      averageRoe += stock.roe;\n      averageEnterpriseValue += stock.enterpriseValue;\n      averageProfitMargins += stock.profitMargins;\n    });\n    setAverageData([{\n      forwardPE: averagePE / numStocks\n    }]);\n  };\n\n  useEffect(() => {\n    axios.get(\"stocks/\").then(res => {\n      setStocksData(res.data.stocksData);\n    }).catch(error => console.error('Error: $(error)'));\n  }, []);\n\n  const onAdd = ({\n    ticker\n  }) => {\n    axios.post(\"stocks/\", {\n      ticker: ticker\n    }).then(res => {\n      setStocksData([...stocksData, res.data]);\n    });\n    setRenderTable(true);\n  };\n\n  const onDelete = ({\n    ticker\n  }) => {\n    axios.delete(\"delete-stock/\" + ticker);\n    setStocksData(stocksData.filter(stock => stock.ticker != ticker));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AddStock, {\n      onAdd: onAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), stocksData.length > 0 ? /*#__PURE__*/_jsxDEV(StockTable, {\n      data: stocksData,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add a Stock mf!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 92\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Jy9mOx9x7wqGV4MQtDMYH+aZfEo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/App.js"],"names":["StockTable","useEffect","useState","axios","AddStock","App","stocksData","setStocksData","averageData","setAverageData","updateAverageState","stocks","numStocks","length","averagePE","averageEnterpriseValue","averageMarketCap","averageRoe","averageEnterpriseToRev","averageEnterpriseToEbitda","averageProfitMargins","forEach","stock","forwardPE","enterpriseToEbitda","enterpriseToRev","marketCap","roe","enterpriseValue","profitMargins","get","then","res","data","catch","error","console","onAdd","ticker","post","setRenderTable","onDelete","delete","filter"],"mappings":"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","sourcesContent":["import StockTable from \"./components/StockTable\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport AddStock from \"./components/AddStock\";\n\n\nconst App =()=> {\n    const [stocksData, setStocksData] = useState([])\n    const [averageData, setAverageData] = useState([])\n    const updateAverageState =({ stocks }) => {\n        const numStocks = stocks.length\n        var averagePE = 0\n        var averageEnterpriseValue = 0\n        var averageMarketCap = 0\n        var averageRoe = 0\n        var averageEnterpriseToRev = 0\n        var averageEnterpriseToEbitda = 0\n        var averageProfitMargins = 0\n        stocks.forEach((stock) => {\n            averagePE += stock.forwardPE\n            averageEnterpriseToEbitda += stock.enterpriseToEbitda\n            averageEnterpriseToRev += stock.enterpriseToRev\n            averageMarketCap += stock.marketCap\n            averageRoe += stock.roe\n            averageEnterpriseValue += stock.enterpriseValue\n            averageProfitMargins += stock.profitMargins\n        })\n        setAverageData([{forwardPE:(averagePE/numStocks),\n        }])\n    }\n\n    useEffect(()=> {\n         axios.get(\"stocks/\")\n          .then(res => {\n              setStocksData(res.data.stocksData)\n          }).catch(error => console.error('Error: $(error)'))\n    }, [])\n\n\n    const onAdd =({ ticker })=>{\n        axios.post(\"stocks/\", {ticker:ticker})\n            .then(res => {\n                setStocksData([...stocksData, res.data])\n            })\n        setRenderTable(true)\n    }\n\n    const onDelete = ({ ticker }) =>{\n        axios.delete(\"delete-stock/\" + ticker )\n        setStocksData(stocksData.filter((stock) => stock.ticker != ticker))\n    }\n\n    return (\n    <div className=\"App\">\n        <AddStock onAdd={ onAdd }/>\n        {\n            (stocksData.length>0) ? <StockTable data={stocksData} onDelete={onDelete} /> : <div>Add a Stock mf!</div>\n        }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}