{"ast":null,"code":"var _jsxFileName = \"/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/components/StockTable/StockTableRow/StockTableRow.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { FaTimes } from \"react-icons/all\";\nimport classNames from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StockTableRow = ({\n  stock,\n  average,\n  onDelete\n}) => {\n  _s();\n\n  const billion = 1000000000;\n  const [aboveAverage, setAboveAverage] = useState([]);\n  const aboveMC = stock.marketCap > average.marketCap;\n  const aboveEV = stock.enterpriseValue > average.enterpriseValue;\n  const abovePE = stock.forwardPE > average.forwardPE;\n  const aboveEtR = stock.enterpriseToRev > average.enterpriseToRev;\n  const aboveEtE = stock.enterpriseToEbitda > average.enterpriseToEbitda;\n  const aboveROE = stock.roe > average.roe;\n  setAboveAverage({\n    aboveMC: aboveMC,\n    aboveEV: aboveEV,\n    abovePE: abovePE,\n    aboveEtR: aboveEtR,\n    aboveEtE: aboveEtE,\n    aboveROE: aboveROE\n  });\n  return /*#__PURE__*/_jsxDEV(\"tr\", {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      className: \"delete\",\n      children: [\" \", /*#__PURE__*/_jsxDEV(FaTimes, {\n        style: {\n          color: 'red',\n          cursor: 'pointer'\n        },\n        onClick: () => onDelete(stock)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 38\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.ticker\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.companyName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.sector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.currentPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      className: aboveAverage.aboveMC ? 'above-average' : 'below-average',\n      children: (stock.marketCap / billion).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: (stock.enterpriseValue / billion).toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.forwardPE.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.enterpriseToRev.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.enterpriseToEbitda.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.profitMargins.toFixed(3)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: stock.roe.toFixed(2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 14\n    }, this)]\n  }, stock.ticker, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n};\n\n_s(StockTableRow, \"RHa4cLK2RViNO4BXd20VhPiBsPs=\");\n\n_c = StockTableRow;\nexport default StockTableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"StockTableRow\");","map":{"version":3,"sources":["/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/components/StockTable/StockTableRow/StockTableRow.js"],"names":["React","useState","FaTimes","classNames","StockTableRow","stock","average","onDelete","billion","aboveAverage","setAboveAverage","aboveMC","marketCap","aboveEV","enterpriseValue","abovePE","forwardPE","aboveEtR","enterpriseToRev","aboveEtE","enterpriseToEbitda","aboveROE","roe","color","cursor","ticker","companyName","sector","currentPrice","toFixed","profitMargins"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport { FaTimes } from \"react-icons/all\";\nimport classNames from \"classnames\";\nconst StockTableRow = ({ stock, average, onDelete }) => {\n    const billion = 1000000000\n    const [aboveAverage, setAboveAverage] = useState([])\n\n    const aboveMC = (stock.marketCap>average.marketCap)\n    const aboveEV = (stock.enterpriseValue>average.enterpriseValue)\n    const abovePE = (stock.forwardPE>average.forwardPE)\n    const aboveEtR = (stock.enterpriseToRev>average.enterpriseToRev)\n    const aboveEtE = (stock.enterpriseToEbitda>average.enterpriseToEbitda)\n    const aboveROE = (stock.roe>average.roe)\n\n    setAboveAverage({aboveMC: aboveMC,\n        aboveEV:aboveEV, abovePE:abovePE, aboveEtR:aboveEtR, aboveEtE: aboveEtE, aboveROE:aboveROE})\n\n    return(\n         <tr key={ stock.ticker }>\n             <td className='delete'> <FaTimes style={{ color:'red', cursor: 'pointer' }} onClick={ () => onDelete(stock) }/> </td>\n             <td>{ stock.ticker }</td>\n             <td>{ stock.companyName }</td>\n             <td>{ stock.sector }</td>\n             <td>{ stock.currentPrice }</td>\n             <td className={ aboveAverage.aboveMC ? 'above-average': 'below-average' }>{ (stock.marketCap /billion).toFixed(2) }</td>\n             <td>{ (stock.enterpriseValue /billion).toFixed(2) }</td>\n             <td>{ (stock.forwardPE).toFixed(2) }</td>\n             <td>{ (stock.enterpriseToRev).toFixed(2) }</td>\n             <td>{ (stock.enterpriseToEbitda).toFixed(2) }</td>\n             <td>{ (stock.profitMargins).toFixed(3) }</td>\n             <td>{ (stock.roe).toFixed(2) }</td>\n         </tr>\n    )\n\n}\nexport default StockTableRow"]},"metadata":{},"sourceType":"module"}