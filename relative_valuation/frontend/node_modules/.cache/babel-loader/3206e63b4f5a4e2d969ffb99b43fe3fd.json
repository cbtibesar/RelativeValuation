{"ast":null,"code":"var _jsxFileName = \"/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport StockTable from \"./components/StockTable\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport AddStock from \"./components/AddStock\";\nimport AverageTable from \"./components/AverageTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [stocksData, setStocksData] = useState([]);\n  const [averageData, setAverageData] = useState([]);\n\n  function containsObject(obj, list) {\n    for (var i = 0; i < list.length; i++) {\n      if (list[i].ticker === obj) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  const updateAverageData = stocks => {\n    if (stocks.length > 0) {\n      let numStocks = 0;\n      let averagePE = 0;\n      let averageEnterpriseValue = 0;\n      let averageMarketCap = 0;\n      let averageRoe = 0;\n      let averageEnterpriseToRev = 0;\n      let averageEnterpriseToEbitda = 0;\n      let averageProfitMargins = 0;\n\n      for (var i = 0; i < stocks.length; i++) {\n        averagePE += stock.forwardPE;\n        averageEnterpriseToEbitda += stock.enterpriseToEbitda;\n        averageEnterpriseToRev += stock.enterpriseToRev;\n        averageMarketCap += stock.marketCap;\n        averageRoe += stock.roe;\n        averageEnterpriseValue += stock.enterpriseValue;\n        averageProfitMargins += stock.profitMargins;\n        numStocks += 1;\n      }\n\n      setAverageData([{\n        forwardPE: averagePE / numStocks,\n        enterpriseValue: averageEnterpriseValue / numStocks,\n        enterpriseToRev: averageEnterpriseToRev / numStocks,\n        enterpriseToEbitda: averageEnterpriseToEbitda / numStocks,\n        marketCap: averageMarketCap / numStocks,\n        profitMargins: averageProfitMargins / numStocks,\n        roe: averageRoe / numStocks\n      }]);\n    } else {\n      setAverageData([]);\n    }\n  };\n\n  useEffect(() => {\n    axios.get(\"stocks/\").then(res => {\n      updateAverageData(res.data.stocksData);\n      setStocksData(res.data.stocksData);\n    }).catch(error => console.error('Error: $(error)'));\n  }, []);\n\n  const onAdd = ticker => {\n    if (!containsObject(ticker, stocksData)) {\n      axios.post(\"stocks/\", {\n        ticker: ticker\n      }).then(res => {\n        updateAverageData([...stocksData, res.data]);\n        setStocksData([...stocksData, res.data]);\n      }).catch(function (error) {\n        if (error.response) {\n          console.log(error.response);\n        }\n      });\n    } else {\n      alert(\"Stock already in list!\");\n    }\n  };\n\n  const onDelete = ({\n    ticker\n  }) => {\n    axios.delete(\"delete-stock/\" + ticker);\n    setStocksData(stocksData.filter(stock => stock.ticker !== ticker));\n    updateAverageData(stocksData.filter(stock => stock.ticker !== ticker));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(AddStock, {\n      onAdd: onAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), stocksData.length > 0 ? /*#__PURE__*/_jsxDEV(StockTable, {\n      data: stocksData,\n      onDelete: onDelete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 37\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Add a stock stupid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 19\n    }, this), averageData.length > 0 ? /*#__PURE__*/_jsxDEV(AverageTable, {\n      averageData: averageData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 38\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"Jy9mOx9x7wqGV4MQtDMYH+aZfEo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/conradtibesar/Documents/Com Sci/Python/RelativeValuator/relativevaluator/frontend/src/App.js"],"names":["StockTable","useEffect","useState","axios","AddStock","AverageTable","App","stocksData","setStocksData","averageData","setAverageData","containsObject","obj","list","i","length","ticker","updateAverageData","stocks","numStocks","averagePE","averageEnterpriseValue","averageMarketCap","averageRoe","averageEnterpriseToRev","averageEnterpriseToEbitda","averageProfitMargins","stock","forwardPE","enterpriseToEbitda","enterpriseToRev","marketCap","roe","enterpriseValue","profitMargins","get","then","res","data","catch","error","console","onAdd","post","response","log","alert","onDelete","delete","filter"],"mappings":"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","sourcesContent":["import StockTable from \"./components/StockTable\";\nimport {useEffect, useState} from \"react\";\nimport axios from \"axios\";\nimport AddStock from \"./components/AddStock\";\nimport AverageTable from \"./components/AverageTable\";\n\n\nconst App =()=> {\n    const [stocksData, setStocksData] = useState([])\n    const [averageData, setAverageData] = useState([])\n\n    function containsObject(obj, list) {\n        for (var i = 0; i < list.length; i++) {\n            if (list[i].ticker === obj) {\n                return true;\n            }\n        }\n        return false\n    }\n\n    const updateAverageData =(stocks) => {\n        if(stocks.length>0){\n            let numStocks = 0\n            let averagePE = 0;\n            let averageEnterpriseValue = 0;\n            let averageMarketCap = 0;\n            let averageRoe = 0;\n            let averageEnterpriseToRev = 0;\n            let averageEnterpriseToEbitda = 0;\n            let averageProfitMargins = 0;\n            for(var i=0; i<stocks.length; i++){\n                averagePE += stock.forwardPE\n                averageEnterpriseToEbitda += stock.enterpriseToEbitda\n                averageEnterpriseToRev += stock.enterpriseToRev\n                averageMarketCap += stock.marketCap\n                averageRoe += stock.roe\n                averageEnterpriseValue += stock.enterpriseValue\n                averageProfitMargins += stock.profitMargins\n                numStocks +=1\n            }\n            setAverageData([{forwardPE:(averagePE/numStocks),\n            enterpriseValue:(averageEnterpriseValue/numStocks),\n            enterpriseToRev:(averageEnterpriseToRev/numStocks),\n            enterpriseToEbitda:(averageEnterpriseToEbitda/numStocks),\n            marketCap:(averageMarketCap/numStocks),\n            profitMargins:(averageProfitMargins/numStocks),\n            roe:(averageRoe/numStocks)}])\n        }else{setAverageData([])}\n\n    }\n\n    useEffect(()=> {\n         axios.get(\"stocks/\")\n          .then(res => {\n              updateAverageData(res.data.stocksData)\n              setStocksData(res.data.stocksData)\n\n          }).catch(error => console.error('Error: $(error)'))\n    }, [])\n\n    const onAdd =(ticker)=>{\n        if(!containsObject(ticker, stocksData)){\n            axios.post(\"stocks/\", {ticker:ticker})\n                .then(res => {\n                updateAverageData([...stocksData, res.data])\n                setStocksData([...stocksData, res.data])\n                }).catch(function (error) {\n                if (error.response) {\n                    console.log(error.response)\n                }\n                })\n        }else {alert(\"Stock already in list!\")}\n\n    }\n\n    const onDelete = ({ ticker }) =>{\n        axios.delete(\"delete-stock/\" + ticker)\n        setStocksData(stocksData.filter((stock) => stock.ticker !== ticker))\n        updateAverageData(stocksData.filter((stock) => stock.ticker !== ticker))\n    }\n\n    return (\n    <div className=\"App\">\n\n        <AddStock onAdd={ onAdd }/>\n        {\n            (stocksData.length>0) ? <StockTable data={ stocksData } onDelete={ onDelete } />\n                : <div>Add a stock stupid</div>\n        }\n        {\n            (averageData.length>0) ? <AverageTable averageData={averageData}/>\n                : <></>\n        }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}